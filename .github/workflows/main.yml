name: Electron App Packaging

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, windows-latest-x86]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: npm install
    
    - name: Get version number
      uses: krstphrrr/package-json-version-reader@v1.0.0
      id: version
  
    - name: Build Electron app
      run: npm run build:${{ matrix.os }}

    - name: Create Release
      id: create_release
      if: github.event_name == 'push' && !contains(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: Release ${{ steps.version.outputs.version }}
        body: |
          Release ${{ steps.version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'windows-latest')  
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./dist/My Nextron App-${{ steps.version.outputs.version }}${{ matrix.os == 'ubuntu-latest' && '.AppImage' || '.exe' }}"
        asset_name: My Nextron App-${{ steps.version.outputs.version }}${{ matrix.os == 'ubuntu-latest' && '.AppImage' || '.exe' }}
        asset_content_type: "application/zip"
      env: 
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
